<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QBoRXhpZgAATU0AKgAAAAgABAEaAAUAAAABAAAAPgEbAAUAAAAB
        AAAARgEoAAMAAAABAAIAAAExAAIAAAASAAAATgAAAAAAAABIAAAAAQAAAEgAAAABUGFpbnQuTkVUIHYz
        LjUuMTAA/9sAQwACAQECAQECAgICAgICAgMFAwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoL
        DAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMGAwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AAEQgAdQCMAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAA
        AAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMCBAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGh
        CCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkqNDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0
        dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh
        4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMBAQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIB
        AgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEHYXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBka
        JicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZ
        mqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwD
        AQACEQMRAD8A9Uooor9oPysKKKKACiiigAopQpboCa3YPhf4huVUro9+N10lkFaIq3nOu5UweclefpzU
        ynGPxMqMW9kYNFddZfBPXtR1WxtbdLG4/tCZ7aKaK9ikgEqKWZGkViqttGcEjIrFvPBuoWXh201V44zZ
        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
</value>
  </data>
</root>